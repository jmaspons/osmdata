% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getbb.R
\name{getarea}
\alias{getarea}
\title{Get areas for a given place name}
\usage{
getarea(
  place_name,
  display_name_contains = NULL,
  viewbox = NULL,
  base_url = "https://nominatim.openstreetmap.org",
  featuretype = "settlement",
  limit = 10,
  key = NULL,
  silent = TRUE
)
}
\arguments{
\item{place_name}{The name of the place you're searching for}

\item{display_name_contains}{Text string to match with display_name field
returned by \url{https://wiki.openstreetmap.org/wiki/Nominatim}}

\item{viewbox}{The bounds in which you're searching}

\item{base_url}{Base website from where data is queried}

\item{featuretype}{The type of OSM feature (settlement is default; see Note)}

\item{limit}{How many results should the API return?}

\item{key}{The API key to use for services that require it}

\item{silent}{Should the API be printed to screen? TRUE by default}
}
\value{
A character string representing a set of OSM objects in overpass query
language. For example: \code{"relation(id:11747082)"} represents the area of
the Catalan Countries. A set of objects can also be represented for multirow
\code{area} (e.g. "relation(id:11747082,307833); way(id:22422490)")
}
\description{
This function uses the free Nominatim API provided by OpenStreetMap to find
the areas associated with place names.
}
\details{
The OSM objects that can be used as
\href{https://wiki.openstreetmap.org/wiki/Overpass_API/Overpass_QL#Map_way/relation_to_area_(map_to_area)}{areas in overpass queries}
\emph{must be closed rings} (ways or relations).

See \url{https://wiki.openstreetmap.org/wiki/Nominatim} for details.
}
\note{
Specific values of \code{featuretype} include "street", "city",
\url{https://wiki.openstreetmap.org/wiki/Nominatim} for details). The default
\code{featuretype = "settlement"} combines results from all intermediate
levels below "country" and above "streets". If the bounding box or polygon of
a city is desired, better results will usually be obtained with
\code{featuretype = "city"}.
}
\examples{
\dontrun{
getarea("Salzburg")
# select based on display_name, print query url
getarea("Hereford", display_name_contains = "United States", silent = FALSE)
# select multiple areas
areas <- getbb("Vilafranca", format_out = "data.frame")
area_to_string(areas[areas$osm_type != "node", ]) #
# add LOCATIONIQ=type_your_api_key_here to .Renviron:
key <- Sys.getenv("LOCATIONIQ")
if (nchar(key) == 32) {
    getarea(place_name,
        base_url = "https://locationiq.org/v1/search.php",
        key = key
    )
}
}
}
\seealso{
Other queries: 
\code{\link{add_osm_features}()},
\code{\link{add_osm_feature}()},
\code{\link{area_to_string}()},
\code{\link{bbox_to_string}()},
\code{\link{getbb}()},
\code{\link{opq_around}()},
\code{\link{opq_enclosing}()},
\code{\link{opq_osm_id}()},
\code{\link{opq_string}()},
\code{\link{opq}()},
\code{\link{overpass_status}()}
}
\concept{queries}
